package ens

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeInstanceSDGStatus invokes the ens.DescribeInstanceSDGStatus API synchronously
func (client *Client) DescribeInstanceSDGStatus(request *DescribeInstanceSDGStatusRequest) (response *DescribeInstanceSDGStatusResponse, err error) {
	response = CreateDescribeInstanceSDGStatusResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeInstanceSDGStatusWithChan invokes the ens.DescribeInstanceSDGStatus API asynchronously
func (client *Client) DescribeInstanceSDGStatusWithChan(request *DescribeInstanceSDGStatusRequest) (<-chan *DescribeInstanceSDGStatusResponse, <-chan error) {
	responseChan := make(chan *DescribeInstanceSDGStatusResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeInstanceSDGStatus(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeInstanceSDGStatusWithCallback invokes the ens.DescribeInstanceSDGStatus API asynchronously
func (client *Client) DescribeInstanceSDGStatusWithCallback(request *DescribeInstanceSDGStatusRequest, callback func(response *DescribeInstanceSDGStatusResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeInstanceSDGStatusResponse
		var err error
		defer close(result)
		response, err = client.DescribeInstanceSDGStatus(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeInstanceSDGStatusRequest is the request struct for api DescribeInstanceSDGStatus
type DescribeInstanceSDGStatusRequest struct {
	*requests.RpcRequest
	PageNumber requests.Integer `position:"Query" name:"PageNumber"`
	PageSize   requests.Integer `position:"Query" name:"PageSize"`
	SDGIds     *[]string        `position:"Query" name:"SDGIds"  type:"Json"`
	InstanceId string           `position:"Query" name:"InstanceId"`
	Status     string           `position:"Query" name:"Status"`
}

// DescribeInstanceSDGStatusResponse is the response struct for api DescribeInstanceSDGStatus
type DescribeInstanceSDGStatusResponse struct {
	*responses.BaseResponse
	RequestId        string                 `json:"RequestId" xml:"RequestId"`
	PageNumber       int64                  `json:"PageNumber" xml:"PageNumber"`
	PageSize         string                 `json:"PageSize" xml:"PageSize"`
	TotalCount       string                 `json:"TotalCount" xml:"TotalCount"`
	DeploymentStatus []DeploymentStatusItem `json:"DeploymentStatus" xml:"DeploymentStatus"`
}

// CreateDescribeInstanceSDGStatusRequest creates a request to invoke DescribeInstanceSDGStatus API
func CreateDescribeInstanceSDGStatusRequest() (request *DescribeInstanceSDGStatusRequest) {
	request = &DescribeInstanceSDGStatusRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Ens", "2017-11-10", "DescribeInstanceSDGStatus", "ens", "openAPI")
	request.Method = requests.GET
	return
}

// CreateDescribeInstanceSDGStatusResponse creates a response to parse from DescribeInstanceSDGStatus response
func CreateDescribeInstanceSDGStatusResponse() (response *DescribeInstanceSDGStatusResponse) {
	response = &DescribeInstanceSDGStatusResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
